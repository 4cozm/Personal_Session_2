// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("USER_DATABASE_URL")
}

model accounts {
  accountId   Int     @id @default(autoincrement())
  accountName String  @db.VarChar(255) @unique
  password    String  @db.VarChar(255)
  characters  characters[]
}

model characters {
  characterId   Int    @id @default(autoincrement())
  characterName String @db.VarChar(255) @unique
  gender        String @db.VarChar(255)
  power         Int    @default(100)
  health        Int    @default(500)
  accountId     Int
  account       accounts @relation(fields: [accountId], references: [accountId])
  inventory     inventory?
  equip         equip?
}

model inventory {
  inventoryId Int @id @default(autoincrement())
  CharacterId Int @unique
  character   characters @relation(fields: [CharacterId], references: [characterId])
  items       items[]
}

model items {
  itemId      Int @id @default(autoincrement())
  itemName    String @db.VarChar(255)
  power       Int
  health      Int
  inventoryId Int @unique
  inventory   inventory @relation(fields: [inventoryId], references: [inventoryId])
  EquipId Int @unique
  equips equip @relation(fields: [EquipId],references: [equipId])
}

model equip {
  equipId    Int @id @default(autoincrement())
  CharacterId  Int @unique
  character    characters @relation(fields: [CharacterId], references: [characterId])
  items items[]
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("USER_DATABASE_URL")
}

model accounts {
  accountName String     @db.VarChar(255) @id
  password   String      @db.VarChar(255)
  characters characters[]
}
model characters {
  characterName     String   @db.VarChar(255) @id
  health   Int?     @default(500)
  power    Int?     @default(100)
  money    Int?     @default(10000)
  AccountName String
  account accounts @relation(fields: [AccountName],references: [accountName],onDelete: Cascade,onUpdate: Cascade)
  Anventory inventory?
  Equip equip?
}


model inventory {
  CharacterName String @unique
  characters characters @relation(fields: [CharacterName],references: [characterName])
  Items Items[]
}

model Items {
  itemId        Int     @id @default(autoincrement())
  itemName String @unique
  amount    Int
  health    Int
  power     Int
  CharacterName String @unique
  EquipId Int @unique
  inventory inventory @relation(fields: [CharacterName],references: [CharacterName])
  equip equip @relation(fields: [EquipId],references: [equipId],onDelete: Cascade,onUpdate: Cascade)
}

model equip {
  equipId Int @id @default(autoincrement())
  CharacterName String @unique
  characters characters @relation(fields: [CharacterName],references: [characterName])
  Item Items[]
}

